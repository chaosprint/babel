pub enum OpenRouter {
    GoogleGemini20Flash,
    DeepSeekR1Free,
    MetaLlama3370BInstruct,
    AnthropicClaude35Sonnet,
    OpenAIGPT4oMini,
    GoogleGeminiFlash158B,
    GoogleGeminiFlash15,
    GoogleGeminiPro20ExpFree,
    GoogleGemini20FlashLite,
    DeepSeekR1,
    MistralNemo,
    AnthropicClaude35SonnetBeta,
    GoogleGemini20FlashExpFree,
    DeepSeekR1DistillLlama70B,
    MetaLlama3170BInstruct,
    Qwen25Coder32BInstruct,
    MetaLlama31405BInstruct,
    MistralMistral7BInstruct,
    WizardLM28x22B,
    MistralSmall3,
    MetaLlama318BInstruct,
    MythoMax13B,
    Qwen257BInstruct,
    NousHermes3405BInstruct,
    OpenAIGPT4oMini20240718,
    OpenAIGPT4o,
    GoogleGeminiFlashLite20PreviewFree,
    GoogleGemma327B,
    CohereCommandR082024,
    MetaLlama321BInstruct,
    QwenQwen25VL72BInstruct,
    QwenQwQ32BFree,
    MiniMaxMiniMax01,
    Qwen2572BInstruct,
    GoogleGeminiPro15,
    MistralTiny,
    GoogleGemma327BFree,
    QwenQwQ32B,
    OpenAIGPT4o20241120,
    MetaLlama323BInstruct,
    NeverSleepLlama3Lumimaid8BExtended,
    LiquidLFM7B,
    AnthropicClaude3Haiku,
    AnthropicClaude37Sonnet,
    AnthropicClaude37SonnetThinking,
    AnthropicClaude37SonnetBeta,
    DeepSeekChat,
    DeepSeekChatFree,
}

impl OpenRouter {
    pub fn to_string(&self) -> String {
        match self {
            Self::GoogleGemini20Flash => "google/gemini-2.0-flash-001".to_string(),
            Self::DeepSeekR1Free => "deepseek/deepseek-r1:free".to_string(),
            Self::MetaLlama3370BInstruct => "meta-llama/llama-3.3-70b-instruct".to_string(),
            Self::AnthropicClaude35Sonnet => "anthropic/claude-3.5-sonnet".to_string(),
            Self::OpenAIGPT4oMini => "openai/gpt-4o-mini".to_string(),
            Self::GoogleGeminiFlash158B => "google/gemini-flash-1.5-8b".to_string(),
            Self::GoogleGeminiFlash15 => "google/gemini-flash-1.5".to_string(),
            Self::GoogleGeminiPro20ExpFree => "google/gemini-2.0-pro-exp-02-05:free".to_string(),
            Self::GoogleGemini20FlashLite => "google/gemini-2.0-flash-lite-001".to_string(),
            Self::DeepSeekR1 => "deepseek/deepseek-r1".to_string(),
            Self::MistralNemo => "mistralai/mistral-nemo".to_string(),
            Self::AnthropicClaude35SonnetBeta => "anthropic/claude-3.5-sonnet:beta".to_string(),
            Self::GoogleGemini20FlashExpFree => "google/gemini-2.0-flash-exp:free".to_string(),
            Self::DeepSeekR1DistillLlama70B => "deepseek/deepseek-r1-distill-llama-70b".to_string(),
            Self::MetaLlama3170BInstruct => "meta-llama/llama-3.1-70b-instruct".to_string(),
            Self::Qwen25Coder32BInstruct => "qwen/qwen-2.5-coder-32b-instruct".to_string(),
            Self::MetaLlama31405BInstruct => "meta-llama/llama-3.1-405b-instruct".to_string(),
            Self::MistralMistral7BInstruct => "mistralai/mistral-7b-instruct".to_string(),
            Self::WizardLM28x22B => "microsoft/wizardlm-2-8x22b".to_string(),
            Self::MistralSmall3 => "mistralai/mistral-small-24b-instruct-2501".to_string(),
            Self::MetaLlama318BInstruct => "meta-llama/llama-3.1-8b-instruct".to_string(),
            Self::MythoMax13B => "gryphe/mythomax-l2-13b".to_string(),
            Self::Qwen257BInstruct => "qwen/qwen-2.5-7b-instruct".to_string(),
            Self::NousHermes3405BInstruct => "nousresearch/hermes-3-llama-3.1-405b".to_string(),
            Self::OpenAIGPT4oMini20240718 => "openai/gpt-4o-mini-2024-07-18".to_string(),
            Self::OpenAIGPT4o => "openai/gpt-4o".to_string(),
            Self::GoogleGeminiFlashLite20PreviewFree => {
                "google/gemini-2.0-flash-lite-preview-02-05:free".to_string()
            }
            Self::GoogleGemma327B => "google/gemma-3-27b-it".to_string(),
            Self::CohereCommandR082024 => "cohere/command-r-08-2024".to_string(),
            Self::MetaLlama321BInstruct => "meta-llama/llama-3.2-1b-instruct".to_string(),
            Self::QwenQwen25VL72BInstruct => "qwen/qwen2.5-vl-72b-instruct".to_string(),
            Self::QwenQwQ32BFree => "qwen/qwq-32b:free".to_string(),
            Self::MiniMaxMiniMax01 => "minimax/minimax-01".to_string(),
            Self::Qwen2572BInstruct => "qwen/qwen-2.5-72b-instruct".to_string(),
            Self::GoogleGeminiPro15 => "google/gemini-pro-1.5".to_string(),
            Self::MistralTiny => "mistralai/mistral-tiny".to_string(),
            Self::GoogleGemma327BFree => "google/gemma-3-27b-it:free".to_string(),
            Self::QwenQwQ32B => "qwen/qwq-32b".to_string(),
            Self::OpenAIGPT4o20241120 => "openai/gpt-4o-2024-11-20".to_string(),
            Self::MetaLlama323BInstruct => "meta-llama/llama-3.2-3b-instruct".to_string(),
            Self::NeverSleepLlama3Lumimaid8BExtended => {
                "neversleep/llama-3-lumimaid-8b:extended".to_string()
            }
            Self::LiquidLFM7B => "liquid/lfm-7b".to_string(),
            Self::AnthropicClaude3Haiku => "anthropic/claude-3-haiku".to_string(),
            Self::AnthropicClaude37Sonnet => "anthropic/claude-3.7-sonnet".to_string(),
            Self::AnthropicClaude37SonnetThinking => {
                "anthropic/claude-3.7-sonnet:thinking".to_string()
            }
            Self::AnthropicClaude37SonnetBeta => "anthropic/claude-3.7-sonnet:beta".to_string(),
            Self::DeepSeekChat => "deepseek/deepseek-chat".to_string(),
            Self::DeepSeekChatFree => "deepseek/deepseek-chat:free".to_string(),
        }
    }
}
